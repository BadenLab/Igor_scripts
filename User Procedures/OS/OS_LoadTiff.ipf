#pragma rtGlobals=3		// Use modern global access method and strict wave access.

function OS_LoadTiff()

ImageLoad /Q /O /C=-1 // load the actual tiff

variable nChannels = 1
variable framerate = 1

// Get key data
Prompt nChannels, "Enter number of channels (default 1)"
Prompt framerate, "Enter Framerate (Hz)"
DoPrompt "Please enter key info", nChannels, framerate
if (V_Flag)
	return -1
endif

//
Variable PointPos = strsearch(S_Wavenames, ";", 0)
String FirstWave =S_Wavenames[0,PointPos-1]

duplicate /o $FirstWave InputData //
killwaves $FirstWave

// compute time info
variable nLines_per_frame = Dimsize(InputData,1)
variable nS_per_frame = 1/framerate
variable/G gLineduration = nS_per_frame/nLines_per_frame

if (nChannels==1)
	duplicate /o InputData wDataCh0 // if just one channel then name input wDataCh0

elseif (nChannels>1)
	// if more than 1 channel, need to deinterleave
	variable nX = Dimsize(InputData,0)
	variable nY = Dimsize(InputData,1)
	variable nF = Dimsize(InputData,2)/nChannels		
	variable ff
	
	if (nChannels == 2)
		 // if 2 channels
		// now assume that Ch1 is data and Ch2 stimulus
		make /o/n=(nX,nY,nF) wDataCh0 = NaN // setup data channel
		make /o/n=(nX,nY,nF) wDataCh2 = NaN	// setup trigger channel
		for (ff=0;ff<nF;ff+=1)
			Multithread wDataCh0[][][ff]=InputData[p][q][ff*2]
			Multithread wDataCh2[][][ff]=InputData[p][q][ff*2+1]
		endfor
		wDataCh2*=-1 // invert trigger channel
		wDataCh2+=2^16		

	elseif (nChannels==3) // if 3 channels
		// now assume that Ch1 and 2 is data (red, green) and Ch3 is stimulus
		make /o/n=(nX,nY,nF) wDataCh0 = NaN // setup data channel 1 (green)
		make /o/n=(nX,nY,nF) wDataCh1 = NaN // setup data channel	2 (red)
		make /o/n=(nX,nY,nF) wDataCh2 = NaN	// setup trigger channel
		for (ff=0;ff<nF;ff+=1)
			Multithread wDataCh0[][][ff]=InputData[p][q][ff*3]
			Multithread wDataCh1[][][ff]=InputData[p][q][ff*3+1]
			Multithread wDataCh2[][][ff]=InputData[p][q][ff*3+2]
		endfor
		wDataCh2*=-1 // invert trigger channel
		wDataCh2+=2^16		
	endif

endif

killwaves InputData	

OS_ParameterTable() // make the table
wave OS_parameters // this gets generated by the above function
variable linedurposition = FindDimLabel(OS_Parameters,0,"LineDuration" )
OS_Parameters[linedurposition] = glineduration // overwrite the line duration entry



end